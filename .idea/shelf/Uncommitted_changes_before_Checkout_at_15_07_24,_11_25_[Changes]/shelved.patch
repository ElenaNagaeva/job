Index: src/widget.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from src.masks import get_mask_account, get_mask_card_number\n\n\ndef mask_account_card(input_user: str) -> str:\n    \"\"\"Функция маскировки счета/карты\"\"\"\n    number_spaces = 0\n    for i in input_user:\n        if i == \" \":\n            number_spaces+=1\n    if len(input_user.split()[-1]) == 20:\n        namber_account = get_mask_account(input_user)\n        result = f'{input_user.split()[0]} {namber_account}'\n    elif number_spaces == 5:\n        namber_card = get_mask_card_number(input_user[-19:])\n        result = f'{input_user.split()[0]} {input_user.split()[1]} {namber_card}'\n    elif number_spaces == 4:\n        namber_card = get_mask_card_number(input_user[-19:])\n        result = f'{input_user.split()[0]} {namber_card}'\n\n\n    return result\n\n\nprint(mask_account_card(input()))\n\n\ndef get_data(date_user: str) -> str:\n    \"\"\"Функция преобразования даты в формат дд.мм.гггг\"\"\"\n    return f'{date_user[8:10]}.{date_user[5:7]}.{date_user[0:4]}'\n\n\nprint(get_data(input()))
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/widget.py b/src/widget.py
--- a/src/widget.py	(revision 90e6cd6b8540a82f1a9170186659863a1a3742ea)
+++ b/src/widget.py	(date 1721031886281)
@@ -6,7 +6,7 @@
     number_spaces = 0
     for i in input_user:
         if i == " ":
-            number_spaces+=1
+            number_spaces += 1
     if len(input_user.split()[-1]) == 20:
         namber_account = get_mask_account(input_user)
         result = f'{input_user.split()[0]} {namber_account}'
@@ -17,7 +17,6 @@
         namber_card = get_mask_card_number(input_user[-19:])
         result = f'{input_user.split()[0]} {namber_card}'
 
-
     return result
 
 
@@ -29,4 +28,4 @@
     return f'{date_user[8:10]}.{date_user[5:7]}.{date_user[0:4]}'
 
 
-print(get_data(input()))
\ No newline at end of file
+print(get_data(input()))
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 90e6cd6b8540a82f1a9170186659863a1a3742ea)
+++ b/.gitignore	(date 1721031886288)
@@ -1,0 +1,162 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+share/python-wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.nox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+*.py,cover
+.hypothesis/
+.pytest_cache/
+cover/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+db.sqlite3-journal
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+.pybuilder/
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# IPython
+profile_default/
+ipython_config.py
+
+# pyenv
+#   For a library or package, you might want to ignore these files since the code is
+#   intended to run in multiple environments; otherwise, check them in:
+# .python-version
+
+# pipenv
+#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
+#   However, in case of collaboration, if having platform-specific dependencies or dependencies
+#   having no cross-platform support, pipenv may install dependencies that don't work, or not
+#   install all needed dependencies.
+#Pipfile.lock
+
+# poetry
+#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
+#   This is especially recommended for binary packages to ensure reproducibility, and is more
+#   commonly ignored for libraries.
+#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
+#poetry.lock
+
+# pdm
+#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
+#pdm.lock
+#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
+#   in version control.
+#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
+.pdm.toml
+.pdm-python
+.pdm-build/
+
+# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
+__pypackages__/
+
+# Celery stuff
+celerybeat-schedule
+celerybeat.pid
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
+.dmypy.json
+dmypy.json
+
+# Pyre type checker
+.pyre/
+
+# pytype static type analyzer
+.pytype/
+
+# Cython debug symbols
+cython_debug/
+
+# PyCharm
+#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
+#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
+#  and can be added to the global gitignore or merged into this file.  For a more nuclear
+#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
+#.idea/
\ No newline at end of file
Index: pyproject.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[tool.poetry]\nname = \"pythonproject2\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Elena <elenanagaevap@gmail.com>\"]\nreadme = \"README.md\"\n\n[tool.poetry.dependencies]\npython = \"^3.12\"\n\n\n[tool.poetry.group.lint.dependencies]\nblack = \"^24.4.2\"\nisort = \"^5.13.2\"\nmypy = \"^1.10.0\"\nflake8 = \"^7.1.0\"\n\n\n[tool.isort]\n# максимальная длина строки\nline_length = 119\n\n[tool.black]\n# Максимальная длина строки\nline-length = 119\n# Файлы, которые не нужно форматировать\n#exclude = '''\n\n\n[tool.mypy]\ndisallow_untyped_defs = true\nno_implicit_optional = true\nwarn_return_any = true\nexclude = 'venv'\n\n\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pyproject.toml b/pyproject.toml
--- a/pyproject.toml	(revision 90e6cd6b8540a82f1a9170186659863a1a3742ea)
+++ b/pyproject.toml	(date 1721031886285)
@@ -16,6 +16,10 @@
 flake8 = "^7.1.0"
 
 
+
+[tool.poetry.group.dev.dependencies]
+pytest = "^8.2.2"
+
 [tool.isort]
 # максимальная длина строки
 line_length = 119
Index: src/masks.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\ndef get_mask_card_number(number_card: str) -> str:\n    return (f\"{number_card[0:4]} {number_card[5:7]}** **** \" f\"{number_card[-4:]}\")\n\n\ndef get_mask_account(number_account: str) -> str:\n    return (f\"**{number_account[-5:-1]}\")\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/masks.py b/src/masks.py
--- a/src/masks.py	(revision 90e6cd6b8540a82f1a9170186659863a1a3742ea)
+++ b/src/masks.py	(date 1721031886283)
@@ -5,6 +5,3 @@
 
 def get_mask_account(number_account: str) -> str:
     return (f"**{number_account[-5:-1]}")
-
-
-
Index: poetry.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.\n\n[[package]]\nname = \"black\"\nversion = \"24.4.2\"\ndescription = \"The uncompromising code formatter.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"black-24.4.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:dd1b5a14e417189db4c7b64a6540f31730713d173f0b63e55fabd52d61d8fdce\"},\n    {file = \"black-24.4.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8e537d281831ad0e71007dcdcbe50a71470b978c453fa41ce77186bbe0ed6021\"},\n    {file = \"black-24.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eaea3008c281f1038edb473c1aa8ed8143a5535ff18f978a318f10302b254063\"},\n    {file = \"black-24.4.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:7768a0dbf16a39aa5e9a3ded568bb545c8c2727396d063bbaf847df05b08cd96\"},\n    {file = \"black-24.4.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:257d724c2c9b1660f353b36c802ccece186a30accc7742c176d29c146df6e474\"},\n    {file = \"black-24.4.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:bdde6f877a18f24844e381d45e9947a49e97933573ac9d4345399be37621e26c\"},\n    {file = \"black-24.4.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e151054aa00bad1f4e1f04919542885f89f5f7d086b8a59e5000e6c616896ffb\"},\n    {file = \"black-24.4.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:7e122b1c4fb252fd85df3ca93578732b4749d9be076593076ef4d07a0233c3e1\"},\n    {file = \"black-24.4.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:accf49e151c8ed2c0cdc528691838afd217c50412534e876a19270fea1e28e2d\"},\n    {file = \"black-24.4.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:88c57dc656038f1ab9f92b3eb5335ee9b021412feaa46330d5eba4e51fe49b04\"},\n    {file = \"black-24.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:be8bef99eb46d5021bf053114442914baeb3649a89dc5f3a555c88737e5e98fc\"},\n    {file = \"black-24.4.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:415e686e87dbbe6f4cd5ef0fbf764af7b89f9057b97c908742b6008cc554b9c0\"},\n    {file = \"black-24.4.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:bf10f7310db693bb62692609b397e8d67257c55f949abde4c67f9cc574492cc7\"},\n    {file = \"black-24.4.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:98e123f1d5cfd42f886624d84464f7756f60ff6eab89ae845210631714f6db94\"},\n    {file = \"black-24.4.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:48a85f2cb5e6799a9ef05347b476cce6c182d6c71ee36925a6c194d074336ef8\"},\n    {file = \"black-24.4.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:b1530ae42e9d6d5b670a34db49a94115a64596bc77710b1d05e9801e62ca0a7c\"},\n    {file = \"black-24.4.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:37aae07b029fa0174d39daf02748b379399b909652a806e5708199bd93899da1\"},\n    {file = \"black-24.4.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:da33a1a5e49c4122ccdfd56cd021ff1ebc4a1ec4e2d01594fef9b6f267a9e741\"},\n    {file = \"black-24.4.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ef703f83fc32e131e9bcc0a5094cfe85599e7109f896fe8bc96cc402f3eb4b6e\"},\n    {file = \"black-24.4.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:b9176b9832e84308818a99a561e90aa479e73c523b3f77afd07913380ae2eab7\"},\n    {file = \"black-24.4.2-py3-none-any.whl\", hash = \"sha256:d36ed1124bb81b32f8614555b34cc4259c3fbc7eec17870e8ff8ded335b58d8c\"},\n    {file = \"black-24.4.2.tar.gz\", hash = \"sha256:c872b53057f000085da66a19c55d68f6f8ddcac2642392ad3a355878406fbd4d\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.0\"\nmypy-extensions = \">=0.4.3\"\npackaging = \">=22.0\"\npathspec = \">=0.9.0\"\nplatformdirs = \">=2\"\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.7.4)\", \"aiohttp (>=3.7.4,!=3.9.0)\"]\njupyter = [\"ipython (>=7.8.0)\", \"tokenize-rt (>=3.2.0)\"]\nuvloop = [\"uvloop (>=0.15.2)\"]\n\n[[package]]\nname = \"click\"\nversion = \"8.1.7\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"click-8.1.7-py3-none-any.whl\", hash = \"sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28\"},\n    {file = \"click-8.1.7.tar.gz\", hash = \"sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"flake8\"\nversion = \"7.1.0\"\ndescription = \"the modular source code checker: pep8 pyflakes and co\"\noptional = false\npython-versions = \">=3.8.1\"\nfiles = [\n    {file = \"flake8-7.1.0-py2.py3-none-any.whl\", hash = \"sha256:2e416edcc62471a64cea09353f4e7bdba32aeb079b6e360554c659a122b1bc6a\"},\n    {file = \"flake8-7.1.0.tar.gz\", hash = \"sha256:48a07b626b55236e0fb4784ee69a465fbf59d79eec1f5b4785c3d3bc57d17aa5\"},\n]\n\n[package.dependencies]\nmccabe = \">=0.7.0,<0.8.0\"\npycodestyle = \">=2.12.0,<2.13.0\"\npyflakes = \">=3.2.0,<3.3.0\"\n\n[[package]]\nname = \"isort\"\nversion = \"5.13.2\"\ndescription = \"A Python utility / library to sort Python imports.\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"isort-5.13.2-py3-none-any.whl\", hash = \"sha256:8ca5e72a8d85860d5a3fa69b8745237f2939afe12dbf656afbcb47fe72d947a6\"},\n    {file = \"isort-5.13.2.tar.gz\", hash = \"sha256:48fdfcb9face5d58a4f6dde2e72a1fb8dcaf8ab26f95ab49fab84c2ddefb0109\"},\n]\n\n[package.extras]\ncolors = [\"colorama (>=0.4.6)\"]\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.7.0\"\ndescription = \"McCabe checker, plugin for flake8\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"mccabe-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"},\n    {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},\n]\n\n[[package]]\nname = \"mypy\"\nversion = \"1.10.0\"\ndescription = \"Optional static typing for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"mypy-1.10.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:da1cbf08fb3b851ab3b9523a884c232774008267b1f83371ace57f412fe308c2\"},\n    {file = \"mypy-1.10.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:12b6bfc1b1a66095ab413160a6e520e1dc076a28f3e22f7fb25ba3b000b4ef99\"},\n    {file = \"mypy-1.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9e36fb078cce9904c7989b9693e41cb9711e0600139ce3970c6ef814b6ebc2b2\"},\n    {file = \"mypy-1.10.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:2b0695d605ddcd3eb2f736cd8b4e388288c21e7de85001e9f85df9187f2b50f9\"},\n    {file = \"mypy-1.10.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:cd777b780312ddb135bceb9bc8722a73ec95e042f911cc279e2ec3c667076051\"},\n    {file = \"mypy-1.10.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3be66771aa5c97602f382230165b856c231d1277c511c9a8dd058be4784472e1\"},\n    {file = \"mypy-1.10.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:8b2cbaca148d0754a54d44121b5825ae71868c7592a53b7292eeb0f3fdae95ee\"},\n    {file = \"mypy-1.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1ec404a7cbe9fc0e92cb0e67f55ce0c025014e26d33e54d9e506a0f2d07fe5de\"},\n    {file = \"mypy-1.10.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e22e1527dc3d4aa94311d246b59e47f6455b8729f4968765ac1eacf9a4760bc7\"},\n    {file = \"mypy-1.10.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:a87dbfa85971e8d59c9cc1fcf534efe664d8949e4c0b6b44e8ca548e746a8d53\"},\n    {file = \"mypy-1.10.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:a781f6ad4bab20eef8b65174a57e5203f4be627b46291f4589879bf4e257b97b\"},\n    {file = \"mypy-1.10.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:b808e12113505b97d9023b0b5e0c0705a90571c6feefc6f215c1df9381256e30\"},\n    {file = \"mypy-1.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8f55583b12156c399dce2df7d16f8a5095291354f1e839c252ec6c0611e86e2e\"},\n    {file = \"mypy-1.10.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:4cf18f9d0efa1b16478c4c129eabec36148032575391095f73cae2e722fcf9d5\"},\n    {file = \"mypy-1.10.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:bc6ac273b23c6b82da3bb25f4136c4fd42665f17f2cd850771cb600bdd2ebeda\"},\n    {file = \"mypy-1.10.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:9fd50226364cd2737351c79807775136b0abe084433b55b2e29181a4c3c878c0\"},\n    {file = \"mypy-1.10.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:f90cff89eea89273727d8783fef5d4a934be2fdca11b47def50cf5d311aff727\"},\n    {file = \"mypy-1.10.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fcfc70599efde5c67862a07a1aaf50e55bce629ace26bb19dc17cece5dd31ca4\"},\n    {file = \"mypy-1.10.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:075cbf81f3e134eadaf247de187bd604748171d6b79736fa9b6c9685b4083061\"},\n    {file = \"mypy-1.10.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:3f298531bca95ff615b6e9f2fc0333aae27fa48052903a0ac90215021cdcfa4f\"},\n    {file = \"mypy-1.10.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:fa7ef5244615a2523b56c034becde4e9e3f9b034854c93639adb667ec9ec2976\"},\n    {file = \"mypy-1.10.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3236a4c8f535a0631f85f5fcdffba71c7feeef76a6002fcba7c1a8e57c8be1ec\"},\n    {file = \"mypy-1.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4a2b5cdbb5dd35aa08ea9114436e0d79aceb2f38e32c21684dcf8e24e1e92821\"},\n    {file = \"mypy-1.10.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:92f93b21c0fe73dc00abf91022234c79d793318b8a96faac147cd579c1671746\"},\n    {file = \"mypy-1.10.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:28d0e038361b45f099cc086d9dd99c15ff14d0188f44ac883010e172ce86c38a\"},\n    {file = \"mypy-1.10.0-py3-none-any.whl\", hash = \"sha256:f8c083976eb530019175aabadb60921e73b4f45736760826aa1689dda8208aee\"},\n    {file = \"mypy-1.10.0.tar.gz\", hash = \"sha256:3d087fcbec056c4ee34974da493a826ce316947485cef3901f511848e687c131\"},\n]\n\n[package.dependencies]\nmypy-extensions = \">=1.0.0\"\ntyping-extensions = \">=4.1.0\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\ninstall-types = [\"pip\"]\nmypyc = [\"setuptools (>=50)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"1.0.0\"\ndescription = \"Type system extensions for programs checked with the mypy type checker.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"mypy_extensions-1.0.0-py3-none-any.whl\", hash = \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\"},\n    {file = \"mypy_extensions-1.0.0.tar.gz\", hash = \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"},\n]\n\n[[package]]\nname = \"packaging\"\nversion = \"24.1\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"packaging-24.1-py3-none-any.whl\", hash = \"sha256:5b8f2217dbdbd2f7f384c41c628544e6d52f2d0f53c6d0c3ea61aa5d1d7ff124\"},\n    {file = \"packaging-24.1.tar.gz\", hash = \"sha256:026ed72c8ed3fcce5bf8950572258698927fd1dbda10a5e981cdf0ac37f4f002\"},\n]\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.12.1\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pathspec-0.12.1-py3-none-any.whl\", hash = \"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\"},\n    {file = \"pathspec-0.12.1.tar.gz\", hash = \"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\"},\n]\n\n[[package]]\nname = \"platformdirs\"\nversion = \"4.2.2\"\ndescription = \"A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"platformdirs-4.2.2-py3-none-any.whl\", hash = \"sha256:2d7a1657e36a80ea911db832a8a6ece5ee53d8de21edd5cc5879af6530b1bfee\"},\n    {file = \"platformdirs-4.2.2.tar.gz\", hash = \"sha256:38b7b51f512eed9e84a22788b4bce1de17c0adb134d6becb09836e37d8654cd3\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2023.9.10)\", \"proselint (>=0.13)\", \"sphinx (>=7.2.6)\", \"sphinx-autodoc-typehints (>=1.25.2)\"]\ntest = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=7.4.3)\", \"pytest-cov (>=4.1)\", \"pytest-mock (>=3.12)\"]\ntype = [\"mypy (>=1.8)\"]\n\n[[package]]\nname = \"pycodestyle\"\nversion = \"2.12.0\"\ndescription = \"Python style guide checker\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pycodestyle-2.12.0-py2.py3-none-any.whl\", hash = \"sha256:949a39f6b86c3e1515ba1787c2022131d165a8ad271b11370a8819aa070269e4\"},\n    {file = \"pycodestyle-2.12.0.tar.gz\", hash = \"sha256:442f950141b4f43df752dd303511ffded3a04c2b6fb7f65980574f0c31e6e79c\"},\n]\n\n[[package]]\nname = \"pyflakes\"\nversion = \"3.2.0\"\ndescription = \"passive checker of Python programs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pyflakes-3.2.0-py2.py3-none-any.whl\", hash = \"sha256:84b5be138a2dfbb40689ca07e2152deb896a65c3a3e24c251c5c62489568074a\"},\n    {file = \"pyflakes-3.2.0.tar.gz\", hash = \"sha256:1c61603ff154621fb2a9172037d84dca3500def8c8b630657d1701f026f8af3f\"},\n]\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.12.2\"\ndescription = \"Backported and Experimental Type Hints for Python 3.8+\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"typing_extensions-4.12.2-py3-none-any.whl\", hash = \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\"},\n    {file = \"typing_extensions-4.12.2.tar.gz\", hash = \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"},\n]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \"^3.12\"\ncontent-hash = \"7e3623d22913d5bfbb960fe8abfe2f910c7a1bf0625cb95e52b897f00601b053\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/poetry.lock b/poetry.lock
--- a/poetry.lock	(revision 90e6cd6b8540a82f1a9170186659863a1a3742ea)
+++ b/poetry.lock	(date 1721031886291)
@@ -85,6 +85,17 @@
 pycodestyle = ">=2.12.0,<2.13.0"
 pyflakes = ">=3.2.0,<3.3.0"
 
+[[package]]
+name = "iniconfig"
+version = "2.0.0"
+description = "brain-dead simple config-ini parsing"
+optional = false
+python-versions = ">=3.7"
+files = [
+    {file = "iniconfig-2.0.0-py3-none-any.whl", hash = "sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374"},
+    {file = "iniconfig-2.0.0.tar.gz", hash = "sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3"},
+]
+
 [[package]]
 name = "isort"
 version = "5.13.2"
@@ -205,6 +216,21 @@
 test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=7.4.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)"]
 type = ["mypy (>=1.8)"]
 
+[[package]]
+name = "pluggy"
+version = "1.5.0"
+description = "plugin and hook calling mechanisms for python"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "pluggy-1.5.0-py3-none-any.whl", hash = "sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669"},
+    {file = "pluggy-1.5.0.tar.gz", hash = "sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1"},
+]
+
+[package.extras]
+dev = ["pre-commit", "tox"]
+testing = ["pytest", "pytest-benchmark"]
+
 [[package]]
 name = "pycodestyle"
 version = "2.12.0"
@@ -227,6 +253,26 @@
     {file = "pyflakes-3.2.0.tar.gz", hash = "sha256:1c61603ff154621fb2a9172037d84dca3500def8c8b630657d1701f026f8af3f"},
 ]
 
+[[package]]
+name = "pytest"
+version = "8.2.2"
+description = "pytest: simple powerful testing with Python"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "pytest-8.2.2-py3-none-any.whl", hash = "sha256:c434598117762e2bd304e526244f67bf66bbd7b5d6cf22138be51ff661980343"},
+    {file = "pytest-8.2.2.tar.gz", hash = "sha256:de4bb8104e201939ccdc688b27a89a7be2079b22e2bd2b07f806b6ba71117977"},
+]
+
+[package.dependencies]
+colorama = {version = "*", markers = "sys_platform == \"win32\""}
+iniconfig = "*"
+packaging = "*"
+pluggy = ">=1.5,<2.0"
+
+[package.extras]
+dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "pygments (>=2.7.2)", "requests", "setuptools", "xmlschema"]
+
 [[package]]
 name = "typing-extensions"
 version = "4.12.2"
@@ -241,4 +287,4 @@
 [metadata]
 lock-version = "2.0"
 python-versions = "^3.12"
-content-hash = "7e3623d22913d5bfbb960fe8abfe2f910c7a1bf0625cb95e52b897f00601b053"
+content-hash = "2266c87dd6a9315d29b4453fc4136db206bcdcd88228af9f0b3c83378e372f3b"
